<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:SOALauncher" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d" x:Name="window" x:Class="SOALauncher.MainWindow"
        Title="SOA Launcher" MinHeight="350" MinWidth="650" Height="480" Width="854" Closed="window_Closed">
    <Window.Resources>
        <Storyboard x:Key="OnLoaded1">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tabControl">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VersionList">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayButton">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="window">
        		<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="window">
        		<EasingDoubleKeyFrame KeyTime="0" Value="10"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0" Value="301"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="-19"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0" Value="157"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="-15"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
        	<StackPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <Style x:Key="FocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ImageBrush x:Key="TabItem.Static.Background" ImageSource="Assets/Images/Tab.png"/>
        <ImageBrush x:Key="TabItem.MouseOver.Background" ImageSource="Assets/Images/Tab_Hover.png"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <ImageBrush x:Key="TabItem.Selected.Background" ImageSource="Assets/Images/Tab_Hover.png"/>
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Foreground" Value="White"/>
        	<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
        	<Setter Property="Margin" Value="0"/>
        	<Setter Property="Padding" Value="6,2,6,2"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TabItem}">
        				<Grid x:Name="templateRoot" SnapsToDevicePixels="true" Height="44" Width="120">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="innerBorder">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TabItem.MouseOver.Background}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="innerBorder">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
        						<Border x:Name="innerBorder" BorderThickness="0" Margin="-1" Opacity="0" Background="{DynamicResource TabItem.Selected.Background}"/>
        					</Border>
        					<ContentPresenter x:Name="contentPresenter" TextElement.FontFamily="/Assets/Fonts/#Orbitron" ContentSource="Header" Focusable="False"
        						HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
        						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center">
        						<ContentPresenter.Effect>
        							<DropShadowEffect Color="White" BlurRadius="10" Direction="0" ShadowDepth="0"/>
        						</ContentPresenter.Effect>
        					</ContentPresenter>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Background" TargetName="innerBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>

        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Background" TargetName="innerBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>

        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Background" TargetName="innerBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Background" TargetName="innerBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        						<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        						<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        						<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
        						<Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        						</MultiDataTrigger.Conditions>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
        						</MultiDataTrigger.Conditions>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        						</MultiDataTrigger.Conditions>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        						</MultiDataTrigger.Conditions>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        						</MultiDataTrigger.Conditions>
        					</MultiDataTrigger>
        					<MultiDataTrigger>
        						<MultiDataTrigger.Conditions>
        							<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
        							<Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
        						</MultiDataTrigger.Conditions>
        						<Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
        					</MultiDataTrigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Storyboard x:Key="OnPlay">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="tabControl">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VersionList">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PlayButton">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="window">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="20"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="window">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="20"/>
        	</DoubleAnimationUsingKeyFrames>
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="window">
        		<EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
        		<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
        </EventTrigger>
        <!--<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="PlayButton">
        	<BeginStoryboard x:Name="OnPlay_BeginStoryboard" Storyboard="{StaticResource OnPlay}"/>
        </EventTrigger>-->
    </Window.Triggers>
    <Window.Background>
        <ImageBrush ImageSource="Assets/Images/Background.png" Stretch="UniformToFill">
            <ImageBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                    <TranslateTransform/>
                </TransformGroup>
            </ImageBrush.RelativeTransform>
        </ImageBrush>
    </Window.Background>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition MaxHeight="100"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="30"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition MaxWidth="300"/>
			<ColumnDefinition Width="*"/>
			<ColumnDefinition Width="90"/>
		</Grid.ColumnDefinitions>
		<Image x:Name="image" Grid.Column="0" Grid.Row="0" Source="Assets/Images/Header.png" Margin="-99,-21,-50,-50" RenderTransformOrigin="0.5,0.5">
			<Image.RenderTransform>
				<TransformGroup>
					<ScaleTransform/>
					<SkewTransform/>
					<RotateTransform/>
					<TranslateTransform/>
				</TransformGroup>
			</Image.RenderTransform>
		</Image>
		<TabControl x:Name="tabControl" Grid.Row="1" Grid.ColumnSpan="3" Grid.IsSharedSizeScope="True" UseLayoutRounding="False" Margin="10" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" ItemContainerStyle="{DynamicResource TabItemStyle1}">
			<TabControl.Background>
				<ImageBrush ImageSource="Assets/Images/BackgroundTile.png" TileMode="Tile" Stretch="None" Viewport="0,0,125,72" ViewportUnits="Absolute"/>
			</TabControl.Background>
			<TabItem Header="Update news">
				<local:NewsTab/>
			</TabItem>
			<TabItem Header="Profiles" x:Name="versionTabItem">
				<local:VersionTab x:Name="versionTab"/>
			</TabItem>
			<TabItem Header="Saves">
				<local:SavesTab/>
			</TabItem>
			<TabItem Header="Settings">
				<local:SettingsTab x:Name="SettingsTabControl"/>
			</TabItem>
			<TabItem Header="Console" x:Name="ConsoleTabItem" Visibility="Collapsed">
				<local:ConsoleTab x:Name="Console"/>
			</TabItem>
		</TabControl>
		<ComboBox x:Name="VersionList" Grid.Column="1" Grid.Row="2" Width="200" HorizontalAlignment="Right" SelectionChanged="VersionList_SelectionChanged" ItemContainerStyle="{DynamicResource SoAComboBoxItemStyle}" Style="{DynamicResource SoAComboBoxStyle}"/>
		<Button Content="Play" Grid.Column="2" Grid.Row="2" x:Name="PlayButton" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="30" Click="PlayButton_Click" Style="{DynamicResource SoAButtonStyle}"/>

	</Grid>
</Window>
